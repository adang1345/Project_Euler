"""https://projecteuler.net/problem=101

Using Vandermonde matrices, I generated the 10 optimal polynomials."""


import numpy


def u(n):
    """The 10th degree polynomial function"""
    return 1 - n + n**2 - n**3 + n**4 - n**5 + n**6 - n**7 + n**8 - n**9 + n**10


def p1(n):
    """polynomial that goes through (1,1)"""
    return 1


def p2(n):
    """polynomial that goes through (1,1), (2,683)"""
    return 682*n - 681


def p3(n):
    """polynomial that goes through (1,1), (2,683), (3,44287)"""
    return 21461*n**2 - 63701*n + 42241


def p4(n):
    """polynomial that goes through (1,1), (2,683), (3,44287), (4,838861)"""
    return 118008*n**3 - 686587*n**2 + 1234387*n - 665807


def p5(n):
    """polynomial that goes through (1,1), (2,683), (3,44287), (4,838861), (5,8138021)"""
    return 210232*n**4 - 1984312*n**3 + 6671533*n**2 - 9277213*n + 4379761


def p6(n):
    """polynomial that goes through (1,1), (2,683), (3,44287), (4,838861), (5,8138021), (6,51828151)"""
    return 159060*n**5 - 2175668*n**4 + 11535788*n**3 - 29116967*n**2 + 34305227*n - 14707439


def p7(n):
    """polynomial that goes through (1,1), (2,683), (3,44287), (4,838861), (5,8138021), (6,51828151), (7,247165843)"""
    return 58542*n**6 - 1070322*n**5 + 8069182*n**4 - 31492582*n**3 + 65955241*n**2 - 68962861*n + 27442801


def p8(n):
    """polynomial that goes through (1,1), (2,683), (3,44287), (4,838861), (5,8138021), (6,51828151), (7,247165843),
        (8,954437177)"""
    return (11165*n**7 - 254078*n**6 + 2524808*n**5 - 13814218*n**4 + 44083303*n**3 - 80663539*n**2 + 76941359*n -
            28828799)


def p9(n):
    """polynomial that goes through (1,1), (2,683), (3,44287), (4,838861), (5,8138021), (6,51828151), (7,247165843),
        (8,954437177), (9,3138105961)"""
    return (1111*n**8 - 28831*n**7 + 352528*n**6 - 2514688*n**5 + 11126621*n**4 - 30669221*n**3 + 50572225*n**2 -
            44806465*n + 15966721)


def p10(n):
    """polynomial that goes through (1,1), (2,683), (3,44287), (4,838861), (5,8138021), (6,51828151), (7,247165843),
        (8,954437177), (9,3138105961), (10,909090901)"""
    return (54*n**9 - 1319*n**8 + 18149*n**7 - 157772*n**6 + 902054*n**5 - 3416929*n**4 + 8409499*n**3 - 12753575*n**2
            + 10628639*n - 3628799)


"""vandermonde = numpy.matrix([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                            [1, 2, 2**2, 2**3, 2**4, 2**5, 2**6, 2**7, 2**8, 2**9],
                            [1, 3, 3**2, 3**3, 3**4, 3**5, 3**6, 3**7, 3**8, 3**9],
                            [1, 4, 4**2, 4**3, 4**4, 4**5, 4**6, 4**7, 4**8, 4**9],
                            [1, 5, 5**2, 5**3, 5**4, 5**5, 5**6, 5**7, 5**8, 5**9],
                            [1, 6, 6**2, 6**3, 6**4, 6**5, 6**6, 6**7, 6**8, 6**9],
                            [1, 7, 7**2, 7**3, 7**4, 7**5, 7**6, 7**7, 7**8, 7**9],
                            [1, 8, 8**2, 8**3, 8**4, 8**5, 8**6, 8**7, 8**8, 8**9],
                            [1, 9, 9**2, 9**3, 9**4, 9**5, 9**6, 9**7, 9**8, 9**9],
                            [1, 10, 10**2, 10**3, 10**4, 10**5, 10**6, 10**7, 10**8, 10**9]])
y = numpy.matrix([[1], [683], [44287], [838861], [8138021], [51828151], [247165843], [954437177], [3138105961], [9090909091]])

print((vandermonde**-1)*y)"""

print(sum([p1(2), p2(3), p3(4), p4(5), p5(6), p6(7), p7(8), p8(9), p9(10), p10(11)]))
